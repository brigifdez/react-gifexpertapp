{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAEaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACQ,sBAAMC,SATO,SAACC,GAClBA,EAAEC,iBACGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAKd,SACI,uBACIO,KAAK,OACLC,MAAST,EACTU,SAjBU,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,a,+BCLnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAIAI,MAAQF,GAJR,cAIbG,EAJa,gBAKIA,EAAKC,OALT,uBAKXC,EALW,EAKXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAeZM,GAfY,4CAAH,sDCAPO,EAAc,SAAC,GAAwB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEtC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCHJO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEtB,ECHwB,SAAEA,GAE1B,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAZAC,qBAAU,WAENxB,EAASC,GACJwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAItB,CAAEpB,IAEEqB,EDhBkBK,CAAc1B,GAA/BO,EAAR,EAAQA,KAAMa,EAAd,EAAcA,QAEd,OACI,qCACI,6BAAMpB,IAEJoB,GAAW,2CAEb,qBAAKJ,UAAU,YAAf,SAEYT,EAAKE,KAAK,SAAAC,GAAG,OACT,cAAC,EAAD,eAEKA,GADCA,EAAIC,aEcvBgB,EA3BM,WAEjB,MAAmCzC,mBAAS,CAAC,cAA7C,mBAAO0C,EAAP,KAAkB3C,EAAlB,KAOA,OACI,eAAC,WAAD,WACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBACA,6BAEQ2C,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADLA,Y,MCjBlC6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a7a862e8.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n    \r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setinputValue( e.target.value );\r\n    }\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault(); \r\n        if ( inputValue.trim().length > 2 ) {\r\n            setCategories( cats => [ inputValue, ...cats]);\r\n            setinputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n            <form onSubmit={ handleSubmit }>\r\n                <input\r\n                    type=\"text\"\r\n                    value= { inputValue }\r\n                    onChange={ handleInputChange }\r\n                />\r\n            </form>\r\n    )\r\n}","\r\n\r\nexport const getGifs = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&api_key=ULHDZEQXUNqFUGyoXsPRudlBhw3R2KE0&limit=10`;\r\n\r\n    const resp = await fetch ( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { id, title, url} ) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={ url } alt={ title } />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data, loading} = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n            <h3>{ category }</h3>\r\n\r\n            { loading && <p>Loading...</p> }\r\n\r\n            <div className=\"card-grid\">\r\n                    {\r\n                        data.map( img => (\r\n                            <GifGridItem \r\n                            key={ img.id }\r\n                            { ...img }\r\n                            />\r\n                        ))\r\n                    }\r\n            </div> \r\n        </>\r\n    )\r\n}","import { useEffect, useState } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs( category )\r\n            .then( imgs => {\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            })\r\n\r\n    }, [ category ])\r\n\r\n    return state;\r\n\r\n}","import React, { useState } from 'react';\r\nimport { Fragment } from \"react\";\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories,setCategories] = useState(['One Punch']);\r\n\r\n    // const handleAdd = () => {\r\n    //     // setCategories( [ 'HunterXHunter',...categories ] );\r\n    //     setCategories ( cats => [ ...cats, 'HunterXHunter ']);\r\n    // }\r\n\r\n    return(\r\n        <Fragment >\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr/>\r\n            <ol>\r\n                {\r\n                    categories.map( category => (\r\n                        <GifGrid \r\n                            key={ category }\r\n                            category={ category } />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}